
/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.6                                   |
|   \\  /    A nd           | Web:      http://www.openfoam.org               |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default         backward;		
}

gradSchemes
{
    default         Gauss linear;
}

divSchemes
{
    default         none;

    div(phi,U)      Gauss filteredLinear2V 0.1 0.05;

    div(phi,k)      Gauss limitedLinear 0.1;
    div(phi,K)      Gauss limitedLinear 0.1;
    flux(phi,O2)    Gauss limitedLinear01 0.1;
    flux(phi,SURROGATE)  Gauss limitedLinear01 0.1;
    flux(phi,H2O)   Gauss limitedLinear01 0.1;
    flux(phi,CO2)   Gauss limitedLinear01 0.1;
    flux(phi,hs)    Gauss limitedLinear 0.1;
    flux(phi,h)     Gauss limitedLinear 0.1;
    div(phi,h)      Gauss limitedLinear 0.1;
    div(phi,hs)     Gauss limitedLinear 0.1;

    div(phi,Yi_h) Gauss multivariateSelection
    {
        O2              limitedLinear01 0.1;
        N2              limitedLinear01 0.1;
        SURROGATE            limitedLinear01 0.1;
        H2O             limitedLinear01 0.1;
        CO2             limitedLinear01 0.1;
        h               limitedLinear 0.1;
    };

    div(((rho*nuEff)*dev2(T(grad(U))))) Gauss linear;

    div(phiU,p)     Gauss linear;

//    div(Ji,Ii_h)    Gauss upwind;

    div(Ji,Ii_h)    bounded Gauss linearUpwind grad(Ii_h);
}

laplacianSchemes
{
    default         Gauss linear uncorrected;
}

interpolationSchemes
{
    default         linear;
}

snGradSchemes
{
    default         uncorrected;
}

fluxRequired
{
    default         no;
    p_rgh;
}
